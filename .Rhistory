install.packages("KernSmooth")
library (KernSmooth)
library(xlsx)
library(rJava)
Sys.getenv("R_ARCH")
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
library(rJava)
remove.packages(rJava)
install.packages(rJava)
remove.packages("rJava")
install.packages(rJava)
install.packages("rJava")
q()
activitydata <- read.csv("activity.csv")
setwd("C:/Users/Asfa/Desktop/Coursera/Reproducible Research/Peer Assessment1/RepData_PeerAssessment1")
activitydata <- read.csv("activity.csv")
head(activitydata)
activitydata$date<-as.Date(activitydata$date, format= "%Y/%m/%d")
head(activitydata)
activitydata <- read.csv("activity.csv")
as.Date(activitydata$date, format= "%Y-%m-%d")
activitydata$date<-as.Date(activitydata$date, format= "%Y-%m-%d")
head(activitydata)
aggregatesteps<- aggregate(activitydata$steps, list(activitydata$date, FUN = "sum"))
aggregatesteps<- aggregate(activitydata$steps, list(activitydata$date), FUN = "sum")
head(aggregatesteps)
hist(aggregatesteps)
aggregatesteps<- aggregate(activitydata$steps, list(activitydata$date), FUN = "sum", na.rm= TRUE)
head(aggregatesteps)
hist(aggregatesteps)
as.numeric(aggregatesteps$x)
aggregatesteps$x<-as.numeric(aggregatesteps$x)
hist(aggregatesteps)
hist(aggregatesteps$x)
?hist
hist(aggregatesteps$x, breaks = "Group.1")
hist(aggregatesteps$x)
title("Histogram of total number of steps taken per day")
main("Histogram of total number of steps taken per day")
hist(aggregatesteps$x, main = "Histogram of total number of steps taken per day",xlab="Total Number of Steps per Day")
mean(aggregatesteps$x,na.rm=TRUE)
median(aggregatesteps$x,na.rm=TRUE)
mean(aggregatesteps, na.rm=TRUE)
head(aggregatesteps)
mean(aggregatesteps$x)
median(aggregatesteps$x)
aggregatestepsavg<-aggregate(activitydata$steps, list(activitydata$interval), FUN = "mean", na.rm= TRUE)
head(aggregatestepsavg)
names(aggregatestepsavg)<- c(interval, avgsteps)
names(aggregatestepsavg)<- c("interval", "avgsteps")
plot(interval, avgsteps,type = 1, main = "Daily Activity Pattern", xlab = "Interval", ylab = "Average Number of Steps")
plot(aggregatestepsavg$interval, aggregatestepsavg$avgsteps,type = 1, main = "Daily Activity Pattern", xlab = "Interval", ylab = "Average Number of Steps")
plot(aggregatestepsavg$interval, aggregatestepsavg$avgsteps,type = "1", main = "Daily Activity Pattern", xlab = "Interval", ylab = "Average Number of Steps")
plot(aggregatestepsavg$interval, aggregatestepsavg$avgsteps,type = "l", main = "Daily Activity Pattern", xlab = "Interval", ylab = "Average Number of Steps")
aggregatesteps<- aggregate(activitydata$steps, list(activitydata$date), FUN = "sum")
head(aggregatesteps)
hist(aggregatesteps$x)
mean(aggregatesteps$x)
mean(aggregatesteps$x, na.rm=TRUE)
median(aggregatesteps$x, na.rm=TRUE)
hist(aggregatesteps$x, main = "Histogram of total number of steps taken per day",xlab="Total Number of Steps per Day")
aggregatestepsavg<-aggregate(activitydata$steps, list(activitydata$interval), FUN = "mean")
head(aggregatestepsavg)
tail(aggregatestepsavg)
summaryaggregatestepsavg)
summary(aggregatestepsavg)
aggregatestepsavg<-aggregate(activitydata$steps, list(activitydata$interval), FUN = "mean", na.rm=TRUE)
head(aggregatestepsavg)
tail(aggregatestepsavg)
summary(aggregatestepsavg)
names(aggregatestepsavg)<- c("interval", "avgsteps")
aggregatestepsavg[,avgsteps==max]
head(aggregatestepsavg)
aggregatestepsavg[aggregatesteps$avgsteps==max(aggregatesteps$avgsteps), ]
aggregatestepsavg[aggregatesteps$avgsteps==max(aggregatesteps$avgsteps), interval]
aggregatestepsavg[aggregatesteps$avgsteps==max(aggregatesteps$avgsteps), aggregatestepsavg$interval]
maxsteps<-which.max(aggregatestepsavg$avgsteps)
maxinterval<-aggregatestepsavg[maxsteps,]$aggregatesteps$interval
maxinterval
maxsteps<-which.max(aggregatestepsavg$avgsteps)
maxinterval<-aggregatestepsavg[maxsteps,]$interval
maxinterval
sum(is.na(activitydata))
newactivitydata<-activitydata
for (i in 1:nrow(newactivitydata)) {
if (is.na(newactivitydata$steps[i])) {
newactivitydata$steps[i] <-aggregatestepsavg[which(newactivitydata$interval[i] == aggregatestepsavg$interval),]$avgsteps
}
}
head(newactivitydata)
sum(is.na(newactivitydata))
newaggregatesteps<- aggregate(newactivitydata$steps, list(newactivitydata$date), FUN = "sum")
hist(newaggregatesteps$x, main = "New Histogram of total number of steps taken per day",xlab="Total Number of Steps per Day")
mean(newaggregatesteps$x)
median(newaggregatesteps$x)
weekdays?
?weekdays
?weekdays
newactivitydata$weekday <- factor(weekdays(newactivitydata$date, abbreviate=FALSE)
)
head(newactivitydata)
levels(newactivitydata$weekday)
levels(newactivitydata$weekday) <- list(weekday= c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"), weekend = c("Saturday", "Sunday"))
levels(newactivitydata$weekday)
head(newactivitydata)
aggregateweekday<- aggregate(newactivitydata$steps, list(newactivitydata$interval, newactivitydata$weekday), FUN = "mean")
head(aggregateweekday)
names(aggregateweekday)<- c(interval, weekday, avgsteps)
names(aggregateweekday)<- c("interval", "weekday", "avgsteps")
head(aggregateweekday)
library(lattice)
xyplot(avgsteps ~ interval | factor(weekday), data = aggregateweekday,
type = "l")
xyplot(avgsteps ~ interval | factor(weekday), data = aggregateweekday,
aspect = 1/2,  type = "l")
xyplot(avgsteps ~ interval | factor(weekday), data = aggregateweekday,
layout = c(1,2),  type = "l")
